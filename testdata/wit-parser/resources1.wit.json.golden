&wit.Resolve{
    Worlds:     nil,
    Interfaces: {
        &wit.Interface{
            _typeOwner: wit._typeOwner{},
            _worldItem: wit._worldItem{},
            Name:       &"resources1",
            TypeDefs:   {
                "r1": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"r1",
                    Kind:       &wit.Resource{},
                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
            },
            Functions: {
                "[method]r1.f1": &wit.Function{
                    _worldItem: wit._worldItem{},
                    Name:       "[method]r1.f1",
                    Kind:       &wit.Method{
                        _functionKind: wit._functionKind{},
                        Type:          &wit.TypeDef{(CYCLIC REFERENCE)},
                    },
                    Params: {
                        {
                            Name: "self",
                            Type: &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       (*string)(nil),
                                Kind:       &wit.Borrow{
                                    _handle: wit._handle{},
                                    Type:    &wit.TypeDef{(CYCLIC REFERENCE)},
                                },
                                Owner: nil,
                                Docs:  wit.Docs{},
                            },
                        },
                    },
                    Results: nil,
                    Docs:    wit.Docs{},
                },
                "t1": &wit.Function{
                    _worldItem: wit._worldItem{},
                    Name:       "t1",
                    Kind:       &wit.Freestanding{},
                    Params:     {
                        {
                            Name: "a",
                            Type: &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       (*string)(nil),
                                Kind:       &wit.Borrow{
                                    _handle: wit._handle{},
                                    Type:    &wit.TypeDef{(CYCLIC REFERENCE)},
                                },
                                Owner: nil,
                                Docs:  wit.Docs{},
                            },
                        },
                    },
                    Results: nil,
                    Docs:    wit.Docs{},
                },
                "t2": &wit.Function{
                    _worldItem: wit._worldItem{},
                    Name:       "t2",
                    Kind:       &wit.Freestanding{},
                    Params:     {
                        {
                            Name: "a",
                            Type: &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       (*string)(nil),
                                Kind:       &wit.Own{
                                    _handle: wit._handle{},
                                    Type:    &wit.TypeDef{(CYCLIC REFERENCE)},
                                },
                                Owner: nil,
                                Docs:  wit.Docs{},
                            },
                        },
                    },
                    Results: nil,
                    Docs:    wit.Docs{},
                },
                "t3": &wit.Function{
                    _worldItem: wit._worldItem{},
                    Name:       "t3",
                    Kind:       &wit.Freestanding{},
                    Params:     {
                        {
                            Name: "a",
                            Type: &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       (*string)(nil),
                                Kind:       &wit.Own{
                                    _handle: wit._handle{},
                                    Type:    &wit.TypeDef{(CYCLIC REFERENCE)},
                                },
                                Owner: nil,
                                Docs:  wit.Docs{},
                            },
                        },
                    },
                    Results: nil,
                    Docs:    wit.Docs{},
                },
            },
            Package: &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "resources1",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "resources1": &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs: wit.Docs{},
        },
    },
    TypeDefs: {
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"r1",
            Kind:       &wit.Resource{},
            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       (*string)(nil),
            Kind:       &wit.Borrow{
                _handle: wit._handle{},
                Type:    &wit.TypeDef{(CYCLIC REFERENCE)},
            },
            Owner: nil,
            Docs:  wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       (*string)(nil),
            Kind:       &wit.Own{
                _handle: wit._handle{},
                Type:    &wit.TypeDef{(CYCLIC REFERENCE)},
            },
            Owner: nil,
            Docs:  wit.Docs{},
        },
    },
    Packages: {
        &wit.Package{
            Name: wit.Ident{
                Namespace: "foo",
                Package:   "resources1",
                Extension: "",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "resources1": &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {},
            Docs:   wit.Docs{},
        },
    },
}